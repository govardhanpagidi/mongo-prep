MongoDB uses Config servers to store the metadata for the sharded cluster.

metadata reflects the state and organization for all data and components within the sharded cluster. The metadata includes the list of chunks on every shard and the ranges that define the chunks.

The mongos instances cache this data and use it to route read and write operations to the correct shards. mongos updates the cache when there are metadata changes for the cluster, such as Chunk Splits or adding a shard. 

Shards also read chunk metadata from the config servers.

The config servers also store Authentication configuration information such as Role-Based Access Control or internal authentication settings for the cluster.

MongoDB also uses the config servers to manage distributed locks.

Replica Set Config Servers:
	- Can have upto 50 config servers
	- must have zero arbiters
	- must have no delayed members
	- must build indexes (ie. no members with members[n].buildIndexes to false)

Read & Write on Config Servers
--------------------------------
The admin database and the config database exist on the config servers.

Writes to Config Servers:
	- The admin database contains the collections related to the authentication and authorization as well as the other system.* collections for internal use.
	-The config database contains the collections that contain the sharded cluster metadata. MongoDB writes data to the config database when the metadata changes, such as after a chunk migration or a chunk split.
	- Users should avoid writing directly to the config database in the course of normal operation or maintenance.
	- When writing to the config servers, MongoDB uses a write concern of "majority".

Reads from Config Servers:
	- MongoDB reads from the admin database for authentication and authorization data and other internal uses.
	- MongoDB reads from the config database when a mongos starts or after a change in the metadata, such as after a chunk migration. 
	- Shards also read chunk metadata from the config servers.
	- When reading from the replica set config servers, MongoDB uses a Read Concern level of "majority".

Config Server Availability
-----------------------------
If the config server replica set loses its primary and cannot elect a primary, the cluster's metadata becomes read only. You can still read and write data from the shards, but no chunk migration or chunk splits will occur until the replica set can elect a primary.

In a sharded cluster, mongod and mongos instances monitor the replica sets in the sharded cluster (e.g. shard replica sets, config server replica set).

If all config servers become unavailable, the cluster can become inoperable. To ensure that the config servers remain available and intact, backups of config servers are critical. The data on the config server is small compared to the data stored in a cluster, and the config server has a relatively low activity load.

replMonitorMaxFailedChecks - Default is 30. Number of times mongod or mongos instance tries to reach the replica sets in the sharded cluster to monitor the replica set status and toplogy.

If the number of consecutive unsuccessful attempts to monitor the config server exceedst this parameter value, the monitoring mongod or mongos becomes unusable until you restart the instance.

Sharded Cluster Metadata
------------------------
Config Servers store metadata in the config database.

Always back up the config database before doing any maintenance on the config server.

use config

In general, you should never edit the content of the config database directly.

Collections in config database - changelog, chunks, collections, databases, lockpings, locks, mongos, settings, shards, version