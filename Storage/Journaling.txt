To provide durability in the event of a failure, MongoDB uses write ahead logging to on-disk journal files.

WiredTiger uses checkpoints to provide a consistent view of data on disk and allow MongoDB to recover from the last checkpoint. However, if MongoDB exits unexpectedly in between checkpoints, journaling is required to recover information that occurred after the last checkpoint.

Starting in MongoDB 4.0, you cannot specify --nojournal option or storage.journal.enabled: false for replica set members that use the WiredTiger storage engine.

With journaling, the recovery process:

1. Looks in the data files to find the identifier of the last checkpoint.
2. Searches in the journal files for the record that matches the identifier of the last checkpoint.
3. Apply the operations in the journal files since the last checkpoint.

MongoDB configures WiredTiger to use in-memory buffering for storing the journal records. Threads coordinate to allocate and copy into their portion of the buffer. All journal records up to 128 kB are buffered.

WiredTiger syncs the buffered journal records to disk upon any of the following conditions:
	- For replica set members (primary & secondary)
		- If there are operations waiting for oplog entries. Operations that can wait for oplog entries include - forward scanning queries against the oplog and read operations performed as part of causally consistent sessions.
		- Additionally for secondary members, after every batch application of the oplog entries.
	- If a write operation includes or implies a write concern of j: true.
	- At every 100 ms (storage.journal.commitIntervalMS)
	- When WT creates a new journal file after current journal file exceeds limit of 100MB.

In between write operations, while the journal records remain in the WiredTiger buffers, updates can be lost following a hard shutdown of mongod.

The serverStatus command returns information on the WiredTiger journal statistics in the wiredTiger.log field.

Minimal journal record size for WT is 128 bytes. Records below this size are not compressed.

WT journal files have a max size limit of 100MB. WT creates new journal file once the file exceeds that limit. WT automatically removes old journal files to maintain only the files need to recover from last checkpoint.

WiredTiger pre-allocates journal files.

No separate journal for in-memory storage engine. Write operations with write concern of j: true are immediately acknowledged. 